#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    May 24, 2021 05:14:05 PM -03  platform: Windows NT

import sys

import bot

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import os
import csv
from tkinter import filedialog as dlg
from bot import start
from tkinter import messagebox


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    #WhatsBot_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    #WhatsBot_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    ####################################################################################################
    #                                             comandos                                             #
    ####################################################################################################
    lista_numeros = []
    controle = 1
    msg_ok = 'N'
    anexo_ok = 'N'

    msg_texto = ''
    anexo_name = ''
    anexo_path = ''

    def treeview_check(self): #teste para excluir
        listanumeros = []
        valores = []
        itens = self.Treeview_status.get_children()
        for i in itens:
            valores.append(self.Treeview_status.item(i, 'values'))
        for i in valores:

            listanumeros.append(i[1])


    def mensagem(self):
        self.msg_texto = self.Text1_msg.get(1.0, 'end')
        if len(self.msg_texto) <= 1:
            self.msg_ok = 'N'
            self.Label1_dica_numero.configure(text='''AGORA PREENCHA''')
            self.Label1_tampa.place(relx=0.138, rely=0.418, height=20, relwidth=0.724)
            self.Label1_tampa.configure(text='''MENSAGEM PADRÃO''')
        if len(self.msg_texto) > 1:
            self.msg_ok = 'S'
            if self.anexo_ok == 'S' and self.msg_ok == 'S':
                self.Label1_dica_numero.configure(text='''MODELO N° (11999999999)''')
                self.Label1_tampa.place_forget()
                self.Entry1_numero.focus()
                self.Bt_inserir_numero.configure(state='active')
                self.BT_importar_CSV.configure(state='active')
            elif self.anexo_ok == 'N':
                self.Label1_dica_numero.configure(text='''ESCOLHA OU CANCELE''')
                self.Label1_tampa.configure(text='''O ANEXO''')

        return self.mensagem, self.msg_ok

    def anexar(self):
        self.anexo_name = dlg.askopenfile(title='Selecione ANEXO', mode='r')
        if self.anexo_name != None:
            #print('anexo_name -1-=', self.anexo_name)
            self.anexo_name = str(self.anexo_name).split("'")
            #print('anexo_name -2-=', self.anexo_name)
            self.anexo_path = self.anexo_name[1]
            #print('anexo_path = ', self.anexo_path)
            self.anexo_name = self.anexo_name[1].split('/')[-1]
            #print(self.anexo_name)
            self.Label_anexo.configure(text=self.anexo_name)
            self.Label1_dica_anexo.configure(text='ARQUIVO INSERIDO:')
        if self.msg_ok == 'N':
            self.Label1_dica_numero.configure(text='''AGORA PREENCHA''')
            self.Label1_tampa.configure(text='''MENSAGEM PADRÃO''')
            self.anexo_ok = 'S'
            return self.anexo_ok, self.anexo_path, self.anexo_name
        else:
            self.Label1_dica_numero.configure(text='''MODELO N° (11999999999)''')
            self.Label1_tampa.place_forget()
            self.Bt_inserir_numero.configure(state='active')
            self.BT_importar_CSV.configure(state='active')

    def cancel_anexar(self):
        self.Label_anexo.configure(text='SEM ANEXO!')
        self.anexo_ok = 'S'
        self.anexo_name = 'SEM ANEXO'
        self.anexo_path = 'SEM ANEXO'
        if self.msg_ok == 'N':
            self.Label1_dica_numero.configure(text='''AGORA PREENCHA''')
            self.Label1_tampa.configure(text='''MENSAGEM PADRÃO''')
        else:
            self.Label1_dica_numero.configure(text='''MODELO N° (11999999999)''')
            self.Label1_tampa.place_forget()
            self.Entry1_numero.focus()
            self.Bt_inserir_numero.configure(state='active')
            self.BT_importar_CSV.configure(state='active')
        return self.anexo_ok, self.anexo_name, self.anexo_path

    def inserirnumero(self):
        # lista de números de contato
        numero = self.Entry1_numero.get()
        if numero == '':
            messagebox.showinfo("PREENCHA", "Insira um número de contato")
            pass
        elif self.msg_ok == 'N' and self.anexo_ok == 'N':
            messagebox.showinfo("PREENCHA MENSAGEM PADRÃO", "PREENCHA PRIMEIRO\nMENSAGEM PADRÃO E ANEXO")
            pass
        elif numero in self.lista_numeros:
            self.Entry1_numero.delete(0,'end')
            messagebox.showinfo("REPETIDO", "O número inserido é repetido")
        elif numero not in self.lista_numeros:
            self.lista_numeros.append(numero)
            listainput = [self.controle, numero, self.msg_texto, self.anexo_name] #, 'mensagem'+numero, 'anexo'+numero, 'status'+numero]
            self.Treeview_status.insert('', 'end', values=listainput)
            self.Entry1_numero.delete(0, 'end')
            self.Treeview_status.yview_moveto(1)
            self.controle = self.controle + 1
        return self.lista_numeros, self.controle

    def importar_CSV(self):
        importar = dlg.askopenfile(title='Selecione Arquivo CSV', mode='r', filetypes=(('CSV files', '.csv'),))
        try:
            importar = importar.readline()
            for i in importar[3:].strip().split(';'):
                if i not in self.lista_numeros:
                    self.lista_numeros.append(i)
                    self.controle = self.controle + 1
        except Exception as erro:
            print('Erro: ', erro)
            pass
        self.Treeview_status.delete(*self.Treeview_status.get_children())
        for num, item in enumerate(self.lista_numeros):
            self.Treeview_status.yview_moveto(1)

            #if num < self.controle:
            self.Treeview_status.yview_moveto(1)
            self.Treeview_status.insert('', 'end', values=[num + 1, item, self.msg_texto, self.anexo_name])
            self.Treeview_status.yview_moveto(1)
            #self.controle = self.controle + 1



        self.Treeview_status.yview_moveto(1)
        return self.controle, self.lista_numeros

    def deletar_linha(self):
        try:
            itemselecionado = self.Treeview_status.selection()[0]
            valores = self.Treeview_status.item(itemselecionado, 'values')
            for item, valor in enumerate(self.lista_numeros):
                if valor == valores[1]:
                    self.lista_numeros.pop(item)
                    self.controle = self.controle - 1
            self.Treeview_status.delete(*self.Treeview_status.get_children())
            for item, valor in enumerate(self.lista_numeros):
                listainput = [item + 1, valor, self.msg_texto, self.anexo_name]
                self.Treeview_status.insert('', 'end', value=listainput)

        except:
            pass

    def deletar_tudo(self):
        try:
            resposta = messagebox.askokcancel("Tem certeza?", "APAGAR TUDO?")
            if resposta == True:
                self.Treeview_status.delete(*self.Treeview_status.get_children())
                self.lista_numeros = []
                self.controle = 1
                self.msg_ok = 'N'
                self.anexo_ok = 'N'
                self.msg_texto = ''
                self.anexo_name = ''
                self.anexo_path = ''
        except:
            pass

    def drive(self):
        bot.start(self.lista_numeros, self.msg_texto, self.anexo_path)


    ####################################################################################################
    #                                             fim                                                  #
    ####################################################################################################

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#ececec'  # Closest X11 color: 'gray92'

        top.geometry("927x541")
        top.minsize(120, 1)
        top.maxsize(1370, 1517)
        top.resizable(1, 1)
        top.title("WhatsBot")
        top.configure(background="#008040")

##########  INSERIR CONTATO
        self.Canvas1_contato = tk.Canvas(top)
        self.Canvas1_contato.place(relx=0.011, rely=0.111, relheight=0.372, relwidth=0.289)
        self.Canvas1_contato.configure(background="#80ff80")
        self.Canvas1_contato.configure(borderwidth="2")
        self.Canvas1_contato.configure(confine="0")
        self.Canvas1_contato.configure(insertbackground="#000000")
        self.Canvas1_contato.configure(relief="ridge")
        self.Canvas1_contato.configure(selectbackground="blue")
        self.Canvas1_contato.configure(selectforeground="white")

        self.Entry1_numero = tk.Entry(self.Canvas1_contato)
        self.Entry1_numero.place(relx=0.138, rely=0.418, height=20, relwidth=0.724)
        self.Entry1_numero.configure(background="white")
        self.Entry1_numero.configure(disabledforeground="#a3a3a3")
        self.Entry1_numero.configure(font="TkFixedFont")
        self.Entry1_numero.configure(foreground="#000000")
        self.Entry1_numero.configure(insertbackground="black")
        self.Entry1_numero.configure(text='preencha mensagem padrão')

        self.Bt_inserir_numero = tk.Button(self.Canvas1_contato)
        self.Bt_inserir_numero.place(relx=0.373, rely=0.577, height=24, width=62)
        self.Bt_inserir_numero.configure(activebackground="#ececec")
        self.Bt_inserir_numero.configure(activeforeground="#000000")
        self.Bt_inserir_numero.configure(background="#d9d9d9")
        self.Bt_inserir_numero.configure(disabledforeground="#a3a3a3")
        self.Bt_inserir_numero.configure(foreground="#000000")
        self.Bt_inserir_numero.configure(highlightbackground="#d9d9d9")
        self.Bt_inserir_numero.configure(highlightcolor="black")
        self.Bt_inserir_numero.configure(pady="0")
        self.Bt_inserir_numero.configure(text='''INSERIR''')
        self.Bt_inserir_numero.configure(command=self.inserirnumero)
        self.Bt_inserir_numero.configure(state='disabled')
        self.Entry1_numero.bind('<Return>', (lambda event: self.inserirnumero()))

        self.BT_importar_CSV = tk.Button(self.Canvas1_contato)
        self.BT_importar_CSV.place(relx=0.261, rely=0.786, height=24, width=127)
        self.BT_importar_CSV.configure(activebackground="#ececec")
        self.BT_importar_CSV.configure(activeforeground="#000000")
        self.BT_importar_CSV.configure(background="#d9d9d9")
        self.BT_importar_CSV.configure(disabledforeground="#a3a3a3")
        self.BT_importar_CSV.configure(foreground="#000000")
        self.BT_importar_CSV.configure(highlightbackground="#d9d9d9")
        self.BT_importar_CSV.configure(highlightcolor="black")
        self.BT_importar_CSV.configure(pady="0")
        self.BT_importar_CSV.configure(text='''Importar CSV''')
        self.BT_importar_CSV.configure(command=self.importar_CSV)
        self.BT_importar_CSV.configure(state='disabled')

        self.Label1_dica_numero = tk.Label(self.Canvas1_contato)
        self.Label1_dica_numero.place(relx=0.149, rely=0.313, height=22, width=196)
        self.Label1_dica_numero.configure(activebackground="#80ff80")
        self.Label1_dica_numero.configure(background="#80ff80")
        self.Label1_dica_numero.configure(disabledforeground="#a3a3a3")
        self.Label1_dica_numero.configure(foreground="#000000")
        self.Label1_dica_numero.configure(text='''PRIMEIRO: MENSAGEM PADRÃO''')

        self.Label1_tampa = tk.Label(self.Canvas1_contato)
        self.Label1_tampa.place(relx=0.138, rely=0.418, height=20, relwidth=0.724)
        self.Label1_tampa.configure(activebackground="#80ff80")
        self.Label1_tampa.configure(background="#80ff80")
        self.Label1_tampa.configure(disabledforeground="#a3a3a3")
        self.Label1_tampa.configure(foreground="#000000")
        self.Label1_tampa.configure(text='''SEGUNDO: ANEXO PADRÃO''')

        self.Label2_Insira_num = tk.Label(self.Canvas1_contato)
        self.Label2_Insira_num.place(relx=0.026, rely=0.05, height=44, width=254)
        self.Label2_Insira_num.configure(background="#ceffce")
        self.Label2_Insira_num.configure(disabledforeground="#a3a3a3")
        self.Label2_Insira_num.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.Label2_Insira_num.configure(foreground="#000000")
        self.Label2_Insira_num.configure(text='''INSIRA NÚMEROS DE CONTATO''')

##########  INSERIR MENSAGENS
        self.Canvas1_MSG = tk.Canvas(top)
        self.Canvas1_MSG.place(relx=0.317, rely=0.111, relheight=0.372, relwidth=0.368)
        self.Canvas1_MSG.configure(background="#80ff80")
        self.Canvas1_MSG.configure(borderwidth="2")
        self.Canvas1_MSG.configure(confine="0")
        self.Canvas1_MSG.configure(highlightbackground="#d9d9d9")
        self.Canvas1_MSG.configure(highlightcolor="black")
        self.Canvas1_MSG.configure(insertbackground="#000000")
        self.Canvas1_MSG.configure(relief="ridge")
        self.Canvas1_MSG.configure(selectbackground="blue")
        self.Canvas1_MSG.configure(selectforeground="white")

        self.Bt_inserir_MSG = tk.Button(self.Canvas1_MSG)
        self.Bt_inserir_MSG.place(relx=0.413, rely=0.786, height=24, width=62)
        self.Bt_inserir_MSG.configure(activebackground="#ececec")
        self.Bt_inserir_MSG.configure(activeforeground="#000000")
        self.Bt_inserir_MSG.configure(background="#d9d9d9")
        self.Bt_inserir_MSG.configure(disabledforeground="#a3a3a3")
        self.Bt_inserir_MSG.configure(foreground="#000000")
        self.Bt_inserir_MSG.configure(highlightbackground="#d9d9d9")
        self.Bt_inserir_MSG.configure(highlightcolor="black")
        self.Bt_inserir_MSG.configure(pady="0")
        self.Bt_inserir_MSG.configure(text='''INSERIR''')
        self.Bt_inserir_MSG.configure(command=self.mensagem)

        self.Label1_dica_msg = tk.Label(self.Canvas1_MSG)
        self.Label1_dica_msg.place(relx=0.235, rely=0.264, height=19, width=157)
        self.Label1_dica_msg.configure(activebackground="#80ff80")
        self.Label1_dica_msg.configure(activeforeground="black")
        self.Label1_dica_msg.configure(background="#80ff80")
        self.Label1_dica_msg.configure(disabledforeground="#a3a3a3")
        self.Label1_dica_msg.configure(foreground="#000000")
        self.Label1_dica_msg.configure(highlightbackground="#d9d9d9")
        self.Label1_dica_msg.configure(highlightcolor="black")
        self.Label1_dica_msg.configure(text='''Mensagem de texto''')

        self.Label2_Insira_MSG = tk.Label(self.Canvas1_MSG)
        self.Label2_Insira_MSG.place(relx=0.029, rely=0.05, height=44, width=323)
        self.Label2_Insira_MSG.configure(activebackground="#f9f9f9")
        self.Label2_Insira_MSG.configure(activeforeground="black")
        self.Label2_Insira_MSG.configure(background="#ceffce")
        self.Label2_Insira_MSG.configure(disabledforeground="#a3a3a3")
        self.Label2_Insira_MSG.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.Label2_Insira_MSG.configure(foreground="#000000")
        self.Label2_Insira_MSG.configure(highlightbackground="#d9d9d9")
        self.Label2_Insira_MSG.configure(highlightcolor="black")
        self.Label2_Insira_MSG.configure(text='''ESCREVA MENSAGEM PADRÃO''')

        self.Text1_msg = tk.Text(self.Canvas1_MSG)
        self.Text1_msg.place(relx=0.029, rely=0.368, relheight=0.333, relwidth=0.947)
        self.Text1_msg.configure(background="white")
        self.Text1_msg.configure(font="TkTextFont")
        self.Text1_msg.configure(foreground="black")
        self.Text1_msg.configure(highlightbackground="#d9d9d9")
        self.Text1_msg.configure(highlightcolor="black")
        self.Text1_msg.configure(insertbackground="black")
        self.Text1_msg.configure(selectbackground="blue")
        self.Text1_msg.configure(selectforeground="white")
        self.Text1_msg.focus()
        self.Text1_msg.configure(wrap="word")

##########  INSERIR ANEXO
        self.Canvas1_anexo = tk.Canvas(top)
        self.Canvas1_anexo.place(relx=0.701, rely=0.111, relheight=0.372, relwidth=0.289)
        self.Canvas1_anexo.configure(background="#80ff80")
        self.Canvas1_anexo.configure(borderwidth="2")
        self.Canvas1_anexo.configure(confine="0")
        self.Canvas1_anexo.configure(highlightbackground="#d9d9d9")
        self.Canvas1_anexo.configure(highlightcolor="black")
        self.Canvas1_anexo.configure(insertbackground="#000000")
        self.Canvas1_anexo.configure(relief="ridge")
        self.Canvas1_anexo.configure(selectbackground="blue")
        self.Canvas1_anexo.configure(selectforeground="white")

        self.Label_anexo = tk.Label(self.Canvas1_anexo)
        self.Label_anexo.place(relx=0.037, rely=0.500, height=30, relwidth=0.91)
        self.Label_anexo.configure(background="#80ff80")
        self.Label_anexo.configure(font="-family {Segoe UI} -size 12 -weight bold")

        self.Bt_inserir_anexo = tk.Button(self.Canvas1_anexo)
        self.Bt_inserir_anexo.place(relx=0.173, rely=0.786, height=24, width=62)
        self.Bt_inserir_anexo.configure(activebackground="#ececec")
        self.Bt_inserir_anexo.configure(activeforeground="#000000")
        self.Bt_inserir_anexo.configure(background="#d9d9d9")
        self.Bt_inserir_anexo.configure(disabledforeground="#a3a3a3")
        self.Bt_inserir_anexo.configure(foreground="#000000")
        self.Bt_inserir_anexo.configure(highlightbackground="#d9d9d9")
        self.Bt_inserir_anexo.configure(highlightcolor="black")
        self.Bt_inserir_anexo.configure(pady="0")
        self.Bt_inserir_anexo.configure(text='''INSERIR''')
        self.Bt_inserir_anexo.configure(command=self.anexar)

        self.Bt_cancela_anexo = tk.Button(self.Canvas1_anexo)
        self.Bt_cancela_anexo.place(relx=0.600, rely=0.786, height=24, width=82)
        self.Bt_cancela_anexo.configure(activebackground="#ececec")
        self.Bt_cancela_anexo.configure(activeforeground="#000000")
        self.Bt_cancela_anexo.configure(background="#d9d9d9")
        self.Bt_cancela_anexo.configure(disabledforeground="#a3a3a3")
        self.Bt_cancela_anexo.configure(foreground="#000000")
        self.Bt_cancela_anexo.configure(highlightbackground="#d9d9d9")
        self.Bt_cancela_anexo.configure(highlightcolor="black")
        self.Bt_cancela_anexo.configure(pady="0")
        self.Bt_cancela_anexo.configure(text='''CANCELAR''')
        self.Bt_cancela_anexo.configure(command=self.cancel_anexar)

        self.Label1_dica_anexo = tk.Label(self.Canvas1_anexo)
        self.Label1_dica_anexo.place(relx=0.149, rely=0.368, height=21, width=186)
        self.Label1_dica_anexo.configure(activebackground="#80ff80")
        self.Label1_dica_anexo.configure(activeforeground="black")
        self.Label1_dica_anexo.configure(background="#80ff80")
        self.Label1_dica_anexo.configure(disabledforeground="#a3a3a3")
        self.Label1_dica_anexo.configure(foreground="#000000")
        self.Label1_dica_anexo.configure(highlightbackground="#d9d9d9")
        self.Label1_dica_anexo.configure(highlightcolor="black")
        self.Label1_dica_anexo.configure(text='''INSIRA ARQUIVO ANEXO''')

        self.Label2_Insira_anexo = tk.Label(self.Canvas1_anexo)
        self.Label2_Insira_anexo.place(relx=0.026, rely=0.05, height=44, width=254)
        self.Label2_Insira_anexo.configure(activebackground="#f9f9f9")
        self.Label2_Insira_anexo.configure(activeforeground="black")
        self.Label2_Insira_anexo.configure(background="#ceffce")
        self.Label2_Insira_anexo.configure(disabledforeground="#a3a3a3")
        self.Label2_Insira_anexo.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.Label2_Insira_anexo.configure(foreground="#000000")
        self.Label2_Insira_anexo.configure(highlightbackground="#d9d9d9")
        self.Label2_Insira_anexo.configure(highlightcolor="black")
        self.Label2_Insira_anexo.configure(text='''INSIRA ARQUIVO ANEXO''')

########### STATUS
        self.Canvas1_Status = tk.Canvas(top)
        self.Canvas1_Status.place(relx=0.043, rely=0.542, relheight=0.362, relwidth=0.916)
        self.Canvas1_Status.configure(background="#d9d9d9")
        self.Canvas1_Status.configure(borderwidth="2")
        self.Canvas1_Status.configure(insertbackground="black")
        self.Canvas1_Status.configure(relief="ridge")
        self.Canvas1_Status.configure(selectbackground="blue")
        self.Canvas1_Status.configure(selectforeground="white")

    ####### Treeview
        style = ttk.Style()
        style.configure("Treeview.Heading", font=(None, 12, 'bold'), foreground="red")
        style.configure("Treeview", rowheight=35)

        self.Treeview_status = ttk.Treeview(self.Canvas1_Status, column=('col1', 'col2', 'col3', 'col4', 'col5'))
        self.Treeview_status.heading('#0', text='')
        self.Treeview_status.heading('#1', text='#ID')
        self.Treeview_status.heading('#2', text='Número')
        self.Treeview_status.heading('#3', text='Mensagem Padrão')
        self.Treeview_status.heading('#4', text='Anexo')
        self.Treeview_status.heading('#5', text='Status')

        self.Treeview_status.column('#0', width=0, minwidth=0)
        self.Treeview_status.column('#1', width=30)
        self.Treeview_status.column('#2', width=80, anchor='center')
        self.Treeview_status.column('#3', width=500)
        self.Treeview_status.column('#4', width=140)
        self.Treeview_status.column('#5', width=60)
        self.Treeview_status.place(relx=0.0001, rely=0.019, relheight=0.97, relwidth=0.975)

    ####### Barra de Rolagem começo
        self.barrarolagem = ttk.Scrollbar(self.Canvas1_Status, orient='vertical')
        self.Treeview_status.configure(yscroll=self.barrarolagem.set)
        self.barrarolagem.config(command=self.Treeview_status.yview)
        self.barrarolagem.place(relx=0.977, rely=0.015, relheight=0.98, relwidth=0.02)
    ####### Barra de Rolagem fim

        self.Button_excluir_linha = tk.Button(top)
        self.Button_excluir_linha.place(relx=0.011, rely=0.61, height=114, width=27)
        self.Button_excluir_linha.configure(activebackground="#ececec")
        self.Button_excluir_linha.configure(activeforeground="#000000")
        self.Button_excluir_linha.configure(background="#ff0000")
        self.Button_excluir_linha.configure(disabledforeground="#a3a3a3")
        self.Button_excluir_linha.configure(foreground="#000000")
        self.Button_excluir_linha.configure(highlightbackground="#d9d9d9")
        self.Button_excluir_linha.configure(highlightcolor="black")
        self.Button_excluir_linha.configure(pady="0")
        self.Button_excluir_linha.configure(text='''EXCLUIR''')
        self.Button_excluir_linha.configure(wraplength="1")
        self.Button_excluir_linha.configure(command=self.deletar_linha)

        self.Button_excluir_tudo = tk.Button(top)
        self.Button_excluir_tudo.place(relx=0.963, rely=0.61, height=114, width=27)
        self.Button_excluir_tudo.configure(activebackground="#ececec")
        self.Button_excluir_tudo.configure(activeforeground="#000000")
        self.Button_excluir_tudo.configure(background="#d70428")
        self.Button_excluir_tudo.configure(disabledforeground="#a3a3a3")
        self.Button_excluir_tudo.configure(foreground="#000000")
        self.Button_excluir_tudo.configure(highlightbackground="#d9d9d9")
        self.Button_excluir_tudo.configure(highlightcolor="black")
        self.Button_excluir_tudo.configure(pady="0")
        self.Button_excluir_tudo.configure(text='''DEL - ALL''')
        self.Button_excluir_tudo.configure(wraplength="1")
        self.Button_excluir_tudo.configure(command=self.deletar_tudo)

        self.Button_enviar = tk.Button(top)
        self.Button_enviar.place(relx=0.421, rely=0.924, height=34, width=157)
        self.Button_enviar.configure(activebackground="#ececec")
        self.Button_enviar.configure(activeforeground="#000000")
        self.Button_enviar.configure(background="#ff8000")
        self.Button_enviar.configure(disabledforeground="#a3a3a3")
        self.Button_enviar.configure(foreground="#000000")
        self.Button_enviar.configure(highlightbackground="#d9d9d9")
        self.Button_enviar.configure(highlightcolor="black")
        self.Button_enviar.configure(pady="0")
        self.Button_enviar.configure(text='''ENVIAR''')
        self.Button_enviar.configure(command=self.drive)

        self.Label_Titulo = tk.Label(top)
        self.Label_Titulo.place(relx=0.216, rely=0.0, height=41, width=517)
        self.Label_Titulo.configure(background="#008040")
        self.Label_Titulo.configure(disabledforeground="#a3a3a3")
        self.Label_Titulo.configure(font="-family {Segoe UI} -size 19 -weight bold")
        self.Label_Titulo.configure(foreground="#000000")
        self.Label_Titulo.configure(text='''WHAT'S BOT''')

if __name__ == '__main__':
    vp_start_gui()
